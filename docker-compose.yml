version: '3.8'

services:
  # PostgreSQL for structured data
  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_DB: portfolio_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # MongoDB for unstructured data
  mongodb:
    image: mongo:5
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  # Redis for caching and task queue
  redis:
    image: redis:6
    ports:
      - "6379:6379"

  # InfluxDB for time-series data
  influxdb:
    image: influxdb:2.6
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=adminpassword
      - DOCKER_INFLUXDB_INIT_ORG=portfolio
      - DOCKER_INFLUXDB_INIT_BUCKET=market_data
    volumes:
      - influxdb_data:/var/lib/influxdb2

  # API service
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - mongodb
      - redis
      - influxdb
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    environment:
      - DATABASE_URL=postgresql://username:password@postgres:5432/portfolio_db
      - MONGODB_URI=mongodb://mongodb:27017/portfolio_db
      - REDIS_URL=redis://redis:6379
      - INFLUXDB_URL=http://influxdb:8086
    command: uvicorn app.main:app --reload --host 0.0.0.0

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - api
    command: npm run dev

volumes:
  postgres_data:
  mongodb_data:
  influxdb_data: